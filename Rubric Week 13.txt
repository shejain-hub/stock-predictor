Week 13 Rubrics Programming Assignment: Build Container Image

Q: What does it mean to create a Docker image and why do we use Docker images?

A: A container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries and settings. Containers isolate software from its environment and ensure that it works uniformly despite differences for instance between development and staging. 


Q: Please explain what is the difference from a Container vs a Virtual Machine?

A: The main difference is that containers virtualize the operating system, while VMs are an abstraction of the hardware. Containers are more portable and efficient.
Each VM includes a full copy of an operating system, the application, necessary binaries and libraries – taking up tens of GBs. VMs can also be slow to boot.
Multiple containers can run on the same machine and share the OS kernel with other containers, each running as isolated processes in user space. Containers take up less space than VMs

Q: What are 5 examples of container orchestration tools (please list tools)?

A: Kubernetes, Openshift, Hasicorp Nomad, Docker Swarm, Google Container Engine (GKE) 

Q: How does a Docker image differ from a Docker container?

A: Container images become containers at runtime and in the case of Docker containers – images become containers when they run on Docker Engine. 